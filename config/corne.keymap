/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <1 2>;
                then-layer = <3>;
            };
        };
        behaviors {
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | ESC  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | LSHFT|
//                    | GUI | LWR | SPC |   | ENT | RSE  | CTRL|
                        bindings = <
   &kp TAB   &kp Q       &kp W      &kp E &kp R &kp T         &kp Y &kp U  &kp I     &kp O        &kp P    &kp BSPC
   &lt 4 ESC &kp A       &kp S      &kp D &kp F &kp G         &kp H &kp J  &kp K     &kp L        &lt 4 SEMI &kp SQT
   &kp LSHFT &hm LCTRL Z &hm LALT X &kp C &kp V &kp B         &kp N &kp M  &kp COMMA &hm RALT DOT &hm RCTRL FSLH &kp RSHFT
                  &kp LGUI &mo 1 &hm LSHFT SPACE   &hm LSHFT RET &mo 2 &kp LCTRL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// | GRAVE|  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// | ESC  | ALT | CTL | TAB | C-b | `   |   | LFT | DWN |  UP | RGT | BKSP|      |
// |      |     |     |     |     |     |   | HOM | PGD | PGU | END| DEL |      |
//                    | GUI |     | SPC |   |     | SUP |     |
                        bindings = <
   &kp GRAVE  &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7    &kp N8    &kp N9    &kp N0   &trans
   &kp ESC    &kp LALT     &kp RCTRL    &kp TAB      &kp LC(B)    &kp GRAVE      &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp BSPC &trans
   &trans     &kp LC(Z)    &kp LC(X)    &kp LC(C)    &kp LC(V)    &trans         &kp HOME &kp PG_DN &kp PG_UP &kp END   &kp DEL  &trans
                          	        &trans       &trans       &trans      &trans  &trans    &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  |  |  \  | BKSP |
// |      |  {  |  }  |  +  |  =  |  -  |   |  _  |  (  |  )  |  "  |  :  |      |
// |      |  `  |  ~  |  [  |  ]  |     |   |     |  '  |  <  |  >  | ?   |      |
//                    |     |     | SUP |   |     |     |     |
                        bindings = <
   &kp TAB   &kp EXCL  &kp AT    &kp HASH &kp DLLR    &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp PIPE  &kp BSLH  &kp BSPC
   &trans    &kp LBRC  &kp RBRC  &kp PLUS &kp EQUAL   &kp MINUS   &kp UNDER &kp LPAR  &kp RPAR        &kp DQT   &kp COLON &trans
   &trans    &kp GRAVE &kp TILDE &kp LBKT &kp RBKT    &trans      &trans    &kp SQT   &kp LT          &kp GT    &kp QMARK &kp PIPE  
                    	       &trans   &trans       &trans      &trans    &trans    &trans
                        >;
                };

                super_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  F1  |  F2  |  F3            |  F4           |  F5  |   |  F6  |  F7  |  F8  |  F9  |  F10  | F11 |
// |      |      |      |  ALT(SHIFT(3)) | ALT(SHIFT(4)) | PRNT |   | PREV | PLAY | NEXT | VOLD | VOLU  | F12 |
// | BTCLR| BT1  | BT2  | BT3            | BT4           | BT5  |   |      | DEF  |  GAM |      |       | MUT |
//                    |      |     |    |        |     |     |     |
                        bindings = <
   &trans      &kp F1       &kp F2       &kp F3        &kp F4        &kp F5         &kp F6     &kp F7     &kp F8     &kp F9       &kp F10      &kp F11
   &trans      &trans       &trans       &kp LA(LS(3)) &kp LA(LS(4)) &kp PSCRN      &kp C_PREV &kp C_PLAY &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp F12
   &bt BT_CLR  &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &trans     &to 0      &to 5     &trans       &trans       &kp C_MUTE
                          	        &trans        &trans       &trans         &trans     &trans     &trans
                        >;
                };

                tiling_layer {
                        bindings = <
   &trans      &kp LA(LS(N1)) &kp LA(LS(N2)) &kp LA(LS(N3)) &kp LA(LS(N4)) &kp LA(LS(N5)) &kp LA(LS(N6)) &kp LA(LS(N7)) &kp LA(LS(N8)) &kp LA(LS(N9)) &trans      &trans
   &trans      &trans        &trans     &trans     &trans        &trans         &trans     &trans     &trans     &trans       &trans      &trans
   &trans      &trans        &trans       &trans   &trans        &trans         &trans     &trans     &trans     &trans       &trans      &trans
                          	        &trans        &trans       &kp LG(SPACE)         &trans     &trans     &trans
                        >;
                };

                gaming_layer {
                        bindings = <
   &kp TAB   &kp Q       &kp W      &kp E &kp R &kp T         &kp Y &kp U  &kp I     &kp O        &kp P    &kp BSPC
   &kp LCTRL &kp A       &kp S      &kp D &kp F &kp G         &kp H &kp J  &kp K     &kp L        &lt 4 SEMI &kp SQT
   &kp LSHFT &kp Z       &kp X &kp C &kp V &kp B         &kp N &kp M  &kp COMMA &hm RALT DOT &hm RCTRL FSLH &kp RSHFT
                  &kp LGUI &mo 1 &kp SPACE   &hm LSHFT RET &mo 2 &kp LCTRL
                        >;
                };
        };
};
